package cn;
// Generated 2019-4-22 19:53:13 by Hibernate Tools 5.4.2.Final

import java.sql.SQLException;
import java.util.List;
import javax.servlet.http.HttpSessionBindingEvent;
import javax.servlet.http.HttpSessionBindingListener;
import com.shoes.until.Service;

/**
 * Users generated by hbm2java
 */
public class Users implements java.io.Serializable ,HttpSessionBindingListener{

	@Override
	public String toString() {
		return "Users [id=" + id + ", name=" + name + ", sex=" + sex + ", password=" + password + ", email=" + email
				+ "]";
	}

	private Integer id;
	private String name;
	private String sex;
	private String password;
	private String email;

	public Users() {
	}

	public Users(String name, String sex, String password, String email) {
		this.name = name;
		this.sex = sex;
		this.password = password;
		this.email = email;
	}

	public Integer getId() {
		return this.id;
	}

	public void setId(Integer id) {
		this.id = id;
	}

	public String getName() {
		return this.name;
	}

	public void setName(String name) {
		this.name = name;
	}

	public String getSex() {
		return this.sex;
	}

	public void setSex(String sex) {
		this.sex = sex;
	}

	public String getPassword() {
		return this.password;
	}

	public void setPassword(String password) {
		this.password = password;
	}

	public String getEmail() {
		return this.email;
	}

	public void setEmail(String email) {
		this.email = email;
	}
	@Override
	public void valueBound(HttpSessionBindingEvent arg0) {
		//arg0.getSession().setMaxInactiveInterval(60*30*20);
		Service service=new Service(); 
		try {
			arg0.getSession().setAttribute("order", service.getorder(this));
			arg0.getSession().setAttribute("preorder", service.getpreorder(this));
			arg0.getSession().setAttribute("Shoeslist", service.getshoes());
		Integer Lognum=(Integer)arg0.getSession().getServletContext().getAttribute("LoginNum");
		arg0.getSession().getServletContext().setAttribute("LoginNum",++Lognum);
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}
	@Override
	public void valueUnbound(HttpSessionBindingEvent arg0) {
		//arg0.getSession().setMaxInactiveInterval(60);
		Integer Lognum=(Integer)arg0.getSession().getServletContext().getAttribute("LoginNum");
		arg0.getSession().getServletContext().setAttribute("LoginNum",--Lognum);
	}
	public List<Orders> getorder() throws SQLException{
		Service service=new Service(); 
		return service.getorder(this);
	}
	public List<cn.Preorder> getpreorder() throws SQLException{
		Service service=new Service(); 
		return service.getpreorder(this);
	}
}
